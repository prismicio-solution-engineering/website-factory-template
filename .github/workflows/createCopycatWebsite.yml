name: Create website on website factory ui input
on: 
  workflow_dispatch:
    inputs:
      website_name:
        description: 'Name Prismic Repo ID (and Website if available)'
        required: true
jobs:
  Create-Prismic-Repo-And-Deploy-Website:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Install packages
        run: npm install
      - name: Login through script
        env: # Set the secret as an input
          CMSRP_EMAIL: ${{ secrets.CMSRP_EMAIL }}
          CMSRP_PWD: ${{ secrets.CMSRP_PWD }}
        run: node --loader ts-node/esm utils/login.mts
      - name: Run @slicemachine/init to push models
        run: npx @slicemachine/init@latest -r ${{ inputs.website_name }}
      - name: Install Vercel CLI
        run: npm install --global vercel
      # - name: Pull Vercel Environment Information
      #   run: vercel --scope prismic-solution-engineering pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy website on vercel
        env: # Set the secret as an input
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel --scope prismic-solution-engineering --token=${{ secrets.VERCEL_TOKEN }} --prod --build-env NEXT_PUBLIC_PRISMIC_ENVIRONMENT=${{ inputs.website_name }} --env NEXT_PUBLIC_PRISMIC_ENVIRONMENT=${{ inputs.website_name }} --name=${{ inputs.website_name }} --yes #--no-wait 
      - run: echo "üçè This job's status is ${{ job.status }}."